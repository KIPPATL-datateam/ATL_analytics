name: 'kipp_atl_dbt_project'
version: '1.0.0'
config-version: 2

profile: 'bigquery'  # Ensure this matches the profile name in profiles.yml


analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"
clean-targets:
  - "target"
  - "dbt_packages"

models:
  kipp_atl_dbt_project:
    +schema: "{{ 'atl_analytics' if target.name == 'prod' else 'dbt_' ~ target.user }}"
    staging:
      +schema: "{{ 'prod_staging' if target.name == 'prod' else 'dbt_' ~ target.user }}"
      +materialized: view
    intermediate:
      +schema: intermediate
      +materialized: view
    dimensional:
      +schema: dim_fct
      +materialized: table
    reporting:
      +schema: reporting
      +materialized: table


seeds:
  +quote_columns: false  # Ensure consistency in column names

tests:
  +store_failures: false  # Change to true if you want to store test failures

snapshots:
  +target_schema: snapshots
  +strategy: timestamp  # Use timestamp-based snapshotting

vars:
  dbt_project: "kipp_atl_dbt_project"
  external_sources_enabled: true  # Enable handling of external sources in dbt
  primary_key_prefix: "id_"  # Enforce standard naming for primary keys

query-comment:
  comment: "Executed by dbt on behalf of KIPP ATL Data Team"
  append: true


# Use in the future incase of heavy macro overriding
# dispatch:
#   - macro_namespace: dbt
#     search_order: ['kipp_atl_dbt_project', 'dbt']

on-run-start:
  - "{{ dbt_utils.log_info('ðŸš€ Starting dbt run for KIPP ATL Data Team') }}"

on-run-end:
  - "{{ dbt_utils.log_info('âœ… dbt run completed successfully!') }}"
